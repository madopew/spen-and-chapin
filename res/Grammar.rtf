{\rtf1\ansi\ansicpg1251\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Parse\
	: var | val									index++; Initialization; continue;\
	| if | while | for								index+=2; Condition; continue;\
	| =										\{if prevvar.isInit\} index++; bool = Expression; prevvar.isIO = bool; prevvar.isModified = !bool; continue;\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 											\{else\}                 index++; prevvar.isInit = true; prevvar.isIO = Expression; continue;\
	| \'85										index++;\
	| outputfunc								index+=2; Output; continue;\
	| anyfunc									index+=2; Func; continue;\
	;\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
//count brackets\
Condition\
	: VAR									VAR.isUnused = false; VAR.isCond = true; index++;\
	| )										index++; return;\
	| \'85										index++;\
\
Output\
	: VAR									VARR.isUnused = false; VAR.isIO = true; index++;\
	| anyfunc									index+=2; Func; continue;\
	| ) 										index++; return;\
	| \'85										index++;\
 \
Initialization\
	: VAR 									addToList; index++; \
	| =										lastInList.isInit = true; index++; VAR.isIO = Expression; break;\
	| DELIM									index++; return;\
	| \'85 										index++;\
\
Expression \
	: VAR									VAR.isUnused = false; index++;\
	| inputfunc									toreturn = true; index += inputfunc;\
	| anyfunc									index+=2; Func; continue;\
	| = 										\{if prevvar.isInit\} index++; bool = Expression; prevvar.isIO = bool; prevvar.isModified = !bool; break;\
											\{else\}                 prevvar.isInit = true; prevvar.isIO = Expression; break;\
	| DELIM									index++; return toreturn;\
	| \'85										index++;\
\
Func\
	: VAR									VAR.isUnused = false; index++;\
	| anyfunc									index+=2; Func; continue;\
	| )										index++; return;\
	| \'85										index++;}